{"ast":null,"code":"var _jsxFileName = \"/Users/lee/Desktop/react/projectx/src/components/ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://localhost:4001\"; // 서버의 주소와 포트를 입력하세요\n\nconst ChatBox = () => {\n  _s();\n  const [response, setResponse] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = socketIOClient(ENDPOINT);\n    socketRef.current.on(\"FromAPI\", data => {\n      setChat([...chat, data]);\n    });\n    return () => socketRef.current.disconnect();\n  }, [chat]);\n  const chatContents = chat.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: message\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 53\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox_bg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox_box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbox_contents\",\n        children: chatContents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbox_input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chat_input_text\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"chat_send_btn\",\n          children: \"\\uBCF4\\uB0B4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"3SqUcIizMoHHZW6oZZb0Bq5FVNY=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","socketIOClient","jsxDEV","_jsxDEV","ENDPOINT","ChatBox","_s","response","setResponse","chat","setChat","socketRef","current","on","data","disconnect","chatContents","map","message","index","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","href","_c","$RefreshReg$"],"sources":["/Users/lee/Desktop/react/projectx/src/components/ChatBox.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport socketIOClient from \"socket.io-client\";\n\nconst ENDPOINT = \"http://localhost:4001\"; // 서버의 주소와 포트를 입력하세요\n\nconst ChatBox = () => {\n  const [response, setResponse] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const socketRef = useRef();\n\n  useEffect(() => {\n    socketRef.current = socketIOClient(ENDPOINT);\n\n    socketRef.current.on(\"FromAPI\", data => {\n      setChat([...chat, data]);\n    });\n\n    return () => socketRef.current.disconnect();\n  }, [chat]);\n\n  const chatContents = chat.map((message, index) => <p key={index}>{message}</p>);\n\n  return (\n    <div className='chatbox_bg'>\n      <div className='chatbox_box'>\n        <div className='chatbox_contents'>\n          {chatContents}\n        </div>\n        <div className='chatbox_input'>\n          <input className='chat_input_text' type=\"text\" />\n          <a href=\"#\" className=\"chat_send_btn\">보내기</a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ChatBox;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAG,uBAAuB,CAAC,CAAC;;AAE1C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMa,SAAS,GAAGX,MAAM,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACdY,SAAS,CAACC,OAAO,GAAGX,cAAc,CAACG,QAAQ,CAAC;IAE5CO,SAAS,CAACC,OAAO,CAACC,EAAE,CAAC,SAAS,EAAEC,IAAI,IAAI;MACtCJ,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEK,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEF,OAAO,MAAMH,SAAS,CAACC,OAAO,CAACG,UAAU,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,MAAMO,YAAY,GAAGP,IAAI,CAACQ,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAAKhB,OAAA;IAAAiB,QAAA,EAAgBF;EAAO,GAAfC,KAAK;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAc,CAAC,CAAC;EAE/E,oBACErB,OAAA;IAAKsB,SAAS,EAAC,YAAY;IAAAL,QAAA,eACzBjB,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAAAL,QAAA,gBAC1BjB,OAAA;QAAKsB,SAAS,EAAC,kBAAkB;QAAAL,QAAA,EAC9BJ;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACNrB,OAAA;QAAKsB,SAAS,EAAC,eAAe;QAAAL,QAAA,gBAC5BjB,OAAA;UAAOsB,SAAS,EAAC,iBAAiB;UAACC,IAAI,EAAC;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjDrB,OAAA;UAAGwB,IAAI,EAAC,GAAG;UAACF,SAAS,EAAC,eAAe;UAAAL,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAlB,EAAA,CA9BKD,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AAgCb,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}